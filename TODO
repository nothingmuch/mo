- constructor should pass the args through the accessors, accepting a list of
  key value pairs, keyed by field, for the layout.

- next/super etc -- methods must be MRO aware - this required a split into
  ::Compiled much like attr is right now.

- add an emitter that can take a collection of method interfaces and compile
  them down to perl 5 packages. Points that must be considered:
	- private methods must be wrapped with redispatchers
	- foreign dispatch types must be dispatchable via ->meta calls, i guess
	- use a comparative-merge approach so that foreign MROs can still work

- Perl::Generate based slot/accessor incest

- Array based layouts

- option for vtable based dispatch (as opposed to named)

- refactor MO::Compile::Class to be pluggable:

	precendence list based enumartion:

		MO::Compile::Enumerating

			get_all_using_* combinators

			this require ordering for sub extractors via extra methods

	interface composition:

		private / public interface merging (easy)

		multiple public interface merging (harder - declare which extractors shadow?)

	meta-instance data:

		attribute merging, field extraction, layout helpers

		method merging

